



@model GeekTextBooks.PaginatedList<Book>


@{
    ViewData["Title"] = "Home Page";
}


<br />

<div class="container">
    <div class="row">
        <div class="dropdown">
            <a class="dropdown-toggle" role="button" aria-expanded="false" href="#" data-toggle="dropdown">Sort by <span class="caret"></span></a>
            <ul class="dropdown-menu" role="menu">
                <li>@Html.ActionLink("Author", "Index", new { sort = ViewBag.AuthorSort })</li>
                <li>@Html.ActionLink("Title", "Index", new { sort = ViewBag.TitleSort })</li>
                <li>@Html.ActionLink("Price (Low to High)", "Index", new { sort = ViewBag.PriceSortLH })</li>
                <li>@Html.ActionLink("Price (High to Low)", "Index", new { sort = ViewBag.PriceSortHL })</li>
                <li>@Html.ActionLink("Release Date", "Index", new { sort = ViewBag.ReleaseSort })</li>
                <li>@Html.ActionLink("Release Date (Most Recent)", "Index", new { sort = ViewBag.ReleaseSortM })</li>
                <li>@Html.ActionLink("Top Sellers", "Index", new { sort = ViewBag.TopSort })</li>
                <li>@Html.ActionLink("Best Rated", "Index", new { sort = ViewBag.BestSort })</li>
            </ul>
            <div class="dropdown">
                <a class="dropdown-toggle" role="button" aria-expanded="false" href="#" data-toggle="dropdown">Results per page <span class="caret"></span></a>
                <ul class="dropdown-menu" role="menu">
                    <li>@Html.ActionLink("10", "Index", new { pageSize = ViewBag.PageSize10 })</li>
                    <li>@Html.ActionLink("20", "Index", new { pageSize = ViewBag.PageSize20 })</li>

                </ul>

                <div class="form-group">
                    <div class="col-md-6 col-md-offset-3">

                        @using (Html.BeginForm("Index", "Home", FormMethod.Get))
                        {
                            @Html.TextBox("search", null, new { @class = "form-control", @placeholder = "Book Name, Author, Genre or ISBN" })
                        }
                        <br />
                    </div>
                    
                </div>
                
            </div>

        </div>


    </div>
</div>


    <br />
    <br />

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="3" style="color:red">
                No match any document
            </td>
        </tr>
    }
    <div class="row" height="220">
        @if (Model.Count() != 0)
        {
            foreach (var item in Model)
            {
                <div class="col-lg-2 col-md-3 col-sm-2 col-xs-5" style="height:550px; width:230px">
                    <a href="../Home/ShowBook?field=@item.ISBN">
                        <div class="thumbnail hvr-grow">
                            <img src="@item.Image" style="height:300px; width:250px">
                            <div class="caption">
                                <span class="rating" style="padding-left:2em">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        string starClass = "";
                                        if (i <= item.Rating)
                                        {
                                            starClass = "starGlowN";
                                        }
                                        else
                                        {
                                            starClass = "starFadeN";
                                        }

                                        <span class="@starClass" style="background-size:20px; background-repeat: no-repeat;"></span>
                                    }
                                </span>
                                <h5>@item.Title</h5>
                                <h6>
                                    <a href="../Home/ShowAuthor?field=@item.Author">@item.Author</a>
                                    <br />$@item.Price
                                </h6>
                            </div>
                        </div>
                    </a>
                </div>
            }

        }
    </div>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <i style="padding-left:33em">
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.FirstIndex)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="text-uppercase">
            @Model.FirstIndex
        </a> ...
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.TotalPages)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="text-uppercase">
            @Model.TotalPages
        </a>

        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-page="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>
    </i>
